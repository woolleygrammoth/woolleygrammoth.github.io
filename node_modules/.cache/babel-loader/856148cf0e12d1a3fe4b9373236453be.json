{"ast":null,"code":"var util = require('utils-extend');\n/**\n * @description\n * @example\n * `**\\/*` match all files\n * `*.js`  only match current dir files\n * '**\\/*.js' match all js files\n * 'path/*.js' match js files in path\n * '!*.js' exclude js files \n */\n\n\nfunction fileMatch(filter, ignore) {\n  if (filter === null) {\n    return function () {\n      return true;\n    };\n  } else if (filter === '' || util.isArray(filter) && !filter.length) {\n    return function () {\n      return false;\n    };\n  }\n\n  if (util.isString(filter)) {\n    filter = [filter];\n  }\n\n  var match = [];\n  var negate = [];\n  var isIgnore = ignore ? 'i' : '';\n  filter.forEach(function (item) {\n    var isNegate = item.indexOf('!') === 0;\n    item = item.replace(/^!/, '').replace(/\\*(?![\\/*])/, '[^/]*?').replace('**\\/', '([^/]+\\/)*').replace(/\\{([^\\}]+)\\}/g, function ($1, $2) {\n      var collection = $2.split(',');\n      var length = collection.length;\n      var result = '(?:';\n      collection.forEach(function (item, index) {\n        result += '(' + item.trim() + ')';\n\n        if (index + 1 !== length) {\n          result += '|';\n        }\n      });\n      result += ')';\n      return result;\n    }).replace(/([\\/\\.])/g, '\\\\$1');\n    item = '(^' + item + '$)';\n\n    if (isNegate) {\n      negate.push(item);\n    } else {\n      match.push(item);\n    }\n  });\n  match = match.length ? new RegExp(match.join('|'), isIgnore) : null;\n  negate = negate.length ? new RegExp(negate.join('|'), isIgnore) : null;\n  return function (filepath) {\n    // Normalize \\\\ paths to / paths.\n    filepath = util.path.unixifyPath(filepath);\n\n    if (negate && negate.test(filepath)) {\n      return false;\n    }\n\n    if (match && match.test(filepath)) {\n      return true;\n    }\n\n    return false;\n  };\n}\n\nmodule.exports = fileMatch;","map":null,"metadata":{},"sourceType":"script"}